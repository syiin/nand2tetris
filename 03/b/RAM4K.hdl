// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=reg1, b=reg2, c=reg3, d=reg4, e=reg5, f=reg6, g=reg7, h=reg8);
    
    RAM512(in=in, load=reg1, address=address[3..11], out=ram1);
    RAM512(in=in, load=reg2, address=address[3..11], out=ram2);
    RAM512(in=in, load=reg3, address=address[3..11], out=ram3);
    RAM512(in=in, load=reg4, address=address[3..11], out=ram4);
    RAM512(in=in, load=reg5, address=address[3..11], out=ram5);
    RAM512(in=in, load=reg6, address=address[3..11], out=ram6);
    RAM512(in=in, load=reg7, address=address[3..11], out=ram7);
    RAM512(in=in, load=reg8, address=address[3..11], out=ram8);

    Mux8Way16(a=ram1, b=ram2, c=ram3, d=ram4, e=ram5, f=ram6, g=ram7, h=ram8, sel=address[0..2], out=out);
}