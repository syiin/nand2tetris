// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    Keyboard(out=);
    Screen(in=, load=, address=, out=);
    

    RAM16K(in=in, load=writescrn, address=address, out=out); //screen memory 1000 0000 0000 00, 16384 - 1011 1111 1111 11, 24575
    
    And(a=address[0], b=address[1], out=writekbd);
    Register(in=in, load=writekbd, out=out); //keyboard 1100 0000 0000 00, 24576

    Not(in=address[0], out=notper);
    Nand(a=notper, b=load, out=writemem);
    RAM16K(in=in, load=writemem, address=address[0..13], out=out); //main memory

    Mux4Way16(a=, b=, c=, d=, sel=, out=);
}