//Write: Sys.init
(Sys.init)
@4
D=A
@SP
M=M+1
A=M-1
M=D
//CallMain.fibonacci
@Main.fibonacciret$.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@LCL
M=D
@6
D=D-A
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacciret$.0)
//EndCallMain.fibonacci
(WHILE)
@WHILE
0; JMP
//Write: Main.fibonacci
(Main.fibonacci)

@0
D=A
@ARG
D=D+M
A=D
D=M
@SP
A=M
M=D

@SP
M=M+1
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
M=M-1
A=M
D=M
@SP
A=M-1
D=M-D
@SUCCESS.line1
D; JLT
@SP
A=M-1
M=0
@CONTINUE.line1
0;JMP
(SUCCESS.line1)
@SP
A=M-1
M=-1
(CONTINUE.line1)
@SP
M=M-1
A=M
D=M
@IF_TRUE
D; JNE
@IF_FALSE
0; JMP
(IF_TRUE)

@0
D=A
@ARG
D=D+M
A=D
D=M
@SP
A=M
M=D

@SP
M=M+1
//RETURN
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13

D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13

D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13

D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13

D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
//ENDRETURN
(IF_FALSE)

@0
D=A
@ARG
D=D+M
A=D
D=M
@SP
A=M
M=D

@SP
M=M+1
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
M=M+1
A=M-1
M=D
//CallMain.fibonacci
@Main.fibonacciret$.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@LCL
M=D
@6
D=D-A
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacciret$.1)
//EndCallMain.fibonacci

@0
D=A
@ARG
D=D+M
A=D
D=M
@SP
A=M
M=D

@SP
M=M+1
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
M=M+1
A=M-1
M=D
//CallMain.fibonacci
@Main.fibonacciret$.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@LCL
M=D
@6
D=D-A
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacciret$.2)
//EndCallMain.fibonacci
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M+D
@SP
M=M+1
A=M-1
M=D
//RETURN
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13

D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13

D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13

D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13

D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
//ENDRETURN
//Write: Sys.init
(Sys.init)
@4
D=A
@SP
M=M+1
A=M-1
M=D
//CallMain.fibonacci
@Main.fibonacciret$.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@LCL
M=D
@6
D=D-A
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacciret$.3)
//EndCallMain.fibonacci
(WHILE)
@WHILE
0; JMP
